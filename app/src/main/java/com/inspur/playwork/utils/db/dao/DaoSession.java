package com.inspur.playwork.utils.db.dao;

import android.database.sqlite.SQLiteDatabase;

import com.inspur.playwork.utils.db.bean.MailAccount;
import com.inspur.playwork.utils.db.bean.MailAttachment;
import com.inspur.playwork.utils.db.bean.MailContacts;
import com.inspur.playwork.utils.db.bean.MailDetail;
import com.inspur.playwork.utils.db.bean.MailDirectory;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig mailDirectoryDaoConfig;
    private final DaoConfig mailDetailDaoConfig;
    private final DaoConfig mailAttachmentDaoConfig;
    private final DaoConfig mailAccountDaoConfig;
    private final DaoConfig mailContactsDaoConfig;
    private final DaoConfig mailTaskDaoConfig;

    private final MailDirectoryDao mailDirectoryDao;
    private final MailDetailDao mailDetailDao;
    private final MailAttachmentDao mailAttachmentDao;
    private final MailAccountDao mailAccountDao;
    private final MailContactsDao mailContactsDao;
    private MailTaskDao mailTaskDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        mailDirectoryDaoConfig = daoConfigMap.get(MailDirectoryDao.class).clone();
        mailDirectoryDaoConfig.initIdentityScope(type);

        mailDetailDaoConfig = daoConfigMap.get(MailDetailDao.class).clone();
        mailDetailDaoConfig.initIdentityScope(type);

        mailAttachmentDaoConfig = daoConfigMap.get(MailAttachmentDao.class).clone();
        mailAttachmentDaoConfig.initIdentityScope(type);

        mailAccountDaoConfig = daoConfigMap.get(MailAccountDao.class).clone();
        mailAccountDaoConfig.initIdentityScope(type);

        mailContactsDaoConfig = daoConfigMap.get(MailContactsDao.class).clone();
        mailContactsDaoConfig.initIdentityScope(type);

        mailTaskDaoConfig = daoConfigMap.get(MailTaskDao.class).clone();
        mailTaskDaoConfig.initIdentityScope(type);

        mailDirectoryDao = new MailDirectoryDao(mailDirectoryDaoConfig, this);
        mailDetailDao = new MailDetailDao(mailDetailDaoConfig, this);
        mailAttachmentDao = new MailAttachmentDao(mailAttachmentDaoConfig, this);
        mailAccountDao = new MailAccountDao(mailAccountDaoConfig, this);
        mailContactsDao = new MailContactsDao(mailContactsDaoConfig, this);
        mailTaskDao = new MailTaskDao(mailTaskDaoConfig, this);

        registerDao(MailDirectory.class, mailDirectoryDao);
        registerDao(MailDetail.class, mailDetailDao);
        registerDao(MailAttachment.class, mailAttachmentDao);
        registerDao(MailAccount.class, mailAccountDao);
        registerDao(MailContacts.class, mailContactsDao);
    }
    
    public void clear() {
        mailDirectoryDaoConfig.getIdentityScope().clear();
        mailDetailDaoConfig.getIdentityScope().clear();
        mailAttachmentDaoConfig.getIdentityScope().clear();
        mailAccountDaoConfig.getIdentityScope().clear();
        mailContactsDaoConfig.getIdentityScope().clear();
        mailTaskDaoConfig.getIdentityScope().clear();
    }

    public MailDirectoryDao getMailDirectoryDao() {
        return mailDirectoryDao;
    }

    public MailDetailDao getMailDetailDao() {
        return mailDetailDao;
    }

    public MailAttachmentDao getMailAttachmentDao() {
        return mailAttachmentDao;
    }

    public MailAccountDao getMailAccountDao() {
        return mailAccountDao;
    }

    public MailContactsDao getMailContactsDao() {
        return mailContactsDao;
    }

    public MailTaskDao getMailTaskDao() {
        return mailTaskDao;
    }
}
